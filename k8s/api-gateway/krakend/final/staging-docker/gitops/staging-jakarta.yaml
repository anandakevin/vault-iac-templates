apiVersion: v1
kind: Namespace
metadata:
  name: api-gateway
---
apiVersion: v1
data:
  KRAKEND_PORT: "8080"
  KRAKEND_URL: https://api.gateway.com/
kind: ConfigMap
metadata:
  name: krakend-config
  namespace: api-gateway
---
apiVersion: v1
kind: Service
metadata:
  name: krakend
  namespace: api-gateway
spec:
  ports:
  - name: http
    port: 8000
    protocol: TCP
    targetPort: 8080
  selector:
    app: krakend
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: krakend-deployment
  namespace: api-gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: krakend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: krakend
    spec:
      containers:
      - args:
        - run
        - -d
        - -c
        - /etc/krakend/krakend.json
        - -p
        - "8080"
        command:
        - /usr/bin/krakend
        env:
        - name: KRAKEND_PORT
          value: "8080"
        image: thechief28/api-gateway/krakend:amd64-build-dev
        imagePullPolicy: Always
        name: krakend
        ports:
        - containerPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: 30s
    nginx.ingress.kubernetes.io/proxy-read-timeout: 300s
    nginx.ingress.kubernetes.io/proxy-send-timeout: 300s
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  name: krakend-ingress
  namespace: api-gateway
spec:
  ingressClassName: prod-ingress-nginx
  rules:
  - host: api.dev.gateway.com
    http:
      paths:
      - backend:
          service:
            name: krakend
            port:
              number: 8080
        path: /
        pathType: Prefix
